@using GwentApp.Models;
@model Player
@{
    ViewBag.Title = "CreateDeck";
}
@*Create a simple list items block to display what we got from the selected leader and faction*@
<h2>Player Deck</h2>
<table class="table">
    <tr>
        <th>
            @Html.DisplayName("Faction Name")
        </th>
        <th>
            @Html.DisplayName("Faction Perk")
        </th>
    </tr>
    <tr>
        <td>
            @Html.DisplayFor(m => m.Faction.FactionName)
        </td>
        <td>
            @Html.DisplayFor(m => m.Faction.FactionPerk)
        </td>
    </tr>
    <tr>
        <th>
            @Html.DisplayName("Leader Name")
        </th>
        <th>
            @Html.DisplayName("Leader Ability")
        </th>
    </tr>
    <tr>
        <td>
            @Html.DisplayFor(m => m.Leader.LeaderName)
        </td>
        <td>
            @Html.DisplayFor(m => m.Leader.LeaderAbility)
        </td>
    </tr>
</table>
<table class="table">
    <tr>
        <th>
            @Html.DisplayName("Card ID")
        </th>
        <th>
            @Html.DisplayName("Image")
        </th>
        <th>
            @Html.DisplayName("Name")
        </th>
        <th>
            @Html.DisplayName("Range")
        </th>
        <th>
            @Html.DisplayName("Power")
        </th>
        <th>
            @Html.DisplayName("Ability")
        </th>
        <th>
            @Html.DisplayName("Faction")
        </th>
        <th>
            @Html.DisplayName("Hero")
        </th>
    </tr>
    @*Loop through the completed card deck to show what's there.*@
    @foreach (Card c in Model.Hand)
    {
        //Nifty bit of conditional formatting here. If the card is a hero then the table row is gold.
        <tr style="@(c.Hero ? " background-color:#C27E3A" : "")">
            <td>
                @*@Html.DisplayFor(x => c.CardId)*@
                <a href="@Url.Content("~/card/byid/"+c.CardId)">@Html.DisplayFor(x => c.CardId)</a>
            </td>
            <td>
                @*<img height="155" width="82" src="@Url.Content(c.ImageFilePath)" />*@
                <a href="@Url.Content(c.ImageFilePath)"><img height="155" width="82" src="@Url.Content(c.ImageFilePath)" /></a>
            </td>
            
            <td>
                @Html.DisplayFor(x => c.Name)
            </td>
            <td>
                @Html.DisplayFor(x => c.Range)
            </td>
            <td style="color:red">
                @Html.DisplayFor(x => c.Power)
            </td>
            <td>
                @Html.DisplayFor(x => c.Ability)
            </td>
            <td>
                @Html.DisplayFor(x => c.Faction)
            </td>
            <td>
                @Html.DisplayFor(x => c.Hero)
            </td>
        </tr>
    }
</table>

<table>
    @* Draw from leftovers*@
    @foreach (Card c in Model.Deck)
    {
        //Nifty bit of conditional formatting here. If the card is a hero then the table row is gold.
        <tr style="@(c.Hero ? " background-color:#C27E3A" : "")">
            <td>
                @Html.DisplayFor(x => c.Name)
            </td>
            <td>
                @Html.DisplayFor(x => c.Range)
            </td>
            <td style="color:red">
                @Html.DisplayFor(x => c.Power)
            </td>
            <td>
                @Html.DisplayFor(x => c.Ability)
            </td>
            <td>
                @Html.DisplayFor(x => c.Faction)
            </td>
            <td>
                @Html.DisplayFor(x => c.Hero)
            </td>
        </tr>
    }
</table>